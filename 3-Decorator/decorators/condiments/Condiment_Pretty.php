<?php

namespace Decorators\Condiments;

use Base\Beverage;

/**
 * Pretty Print Condiment Decorator
 */
class Condiment_Pretty extends Beverage
{
    protected Beverage $beverage;

    public function __construct(Beverage $beverage)
    {
        $this->beverage = $beverage;
    }

    public function getDescription(): string
    {
        $description = "";
        $array = explode(', ', $this->beverage->getDescription());
        $mix = array_count_values($array);
        foreach ($mix as $condiment => $count) {
            $description .= $count === 2 ? 'Double ' . $condiment . ', ' : $condiment . ',';
        }
        return $description; // TODO: Change the autogenerated stub
    }

    public function cost(): float
    {
        return $this->beverage->cost();
    }
}